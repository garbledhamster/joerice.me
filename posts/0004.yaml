id: 0004
title: How I Take Effective Notes
date: 2025-05-12
pinned: false
tags: [notes, productivity]
content: |
  # How I Take Effective Notes

  ---

  I distill my thoughts into notes capturing only essential information. Whether I’m planning, executing, or closing a task, rapid logs help create a clear sequence of events. By including rapid logs with every ticket or note, I continuously develop my knowledge as a knowledge worker. Practicing distillation improves my recall of issues, both mentally and via notes.

  ## Rapid Logging

  I use a structured method to quickly capture notes on any device. Rapid logging pushes me to reduce incoming information to its core elements. Each entry gets labeled clearly: a dash (–) for notes, an "o" for events, or a "+" for tasks. This categorization makes it easier to organize entries later, turning them into actionable items. Rapid logging helps me think quicker, reduces my dependence on screenshots, and enhances the clarity of my thought processes—promoting ongoing knowledge development.

  **When to Use**:

  * Ticket Notes

  **Basic Symbols**:

  * `+` Task or action (future)
  * `-` Note or observation (present)
  * `o` Event or date (past)

  When tasks pop into my head during work, quickly jotting them down helps me refocus immediately.

  **Principles**

  * Distill notes to 3–10 words maximum.
  * Always categorize notes: Tasks (+), Notes (–), Events (o).

  **Two Types of Notes**

  * **Unfiltered**: Direct brain dumps without immediate refinement. This is useful if I haven't taken notes during work and need to quickly capture processes, thoughts, or ideas.
  * **Filtered**: Thoughtfully refined notes taken during or shortly after a situation. I naturally slow down, giving myself time to process information thoroughly. For example, after an installation or customer contact, I'll intentionally pause to record clear and precise notes.

  Rapid logging is a systematic method I can teach junior technicians or new engineers who struggle with note-taking. Over time, I've refined this approach by integrating elements from journaling, psychology, and memory techniques. It's faster and more effective than the common approach of screenshot-heavy documentation. Ultimately, rapid logging saves time before, during, and after issues or events.

  ### Example: Unfiltered Notes from "Troubleshooting an Internet-Down Situation"

  ```text
  - Phill called and reported their internet was out.
  - It started about two hours ago; only the main location was affected.
  o Notified Phill that I’m investigating.
  o Had him reboot the modem—no change.
  + Check for an ISP outage.
  + Contact ISP support.
  o Phill sent the public IP of the modem.
  - I can ping the modem—no drops or latency.
  - The firewall may be dead or a port failed.
  - Cannot ping the WAN interface on the firewall.
  - Customer is out of state; no onsite access.
  o Phill confirmed firewall lights (LAN/WAN) are blinking.
  o Called the ISP.
  - ISP suspended service due to unpaid bill.
  o Issue resolved: Phill paid the bill; internet restored in 10 minutes.
  ```

  ### Example: Filtered Notes

  Filtered notes further distill events and notes to their absolute core, while tasks receive clear detail. Over time, I've learned that overly brief tasks become unclear later—similar to reading sloppy handwriting. Distilled notes force me to find the minimal viable explanation, removing unnecessary detail and ensuring future readability.

  ```text
  - POC: Phill
  o Internet Outage at Main
  - Down 2 hours
  - Notified POC
  + Check ISP outage status online
  + Contact ISP; test modem connectivity
  o Public IP confirmed
  o WAN PUBLIC IP ping failed
  - Modem responsive; latency normal
  + Verify firewall ports with POC
  - Firewall LEDs active per POC
  o ISP Call: Service suspended—unpaid (90 days)
  o POC paid bill; issue resolved
  ```